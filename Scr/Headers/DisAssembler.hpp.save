class DisAssembler
{
    public:
        void run (Stream <int>& in, Stream <BoaToken>& out);
};

void DisAssembler::run (Stream <int>& in, Stream <BoaToken>& out)
{
    #define BOA_1(id, params, name, word, comp, cpu)
    #define BOA_2(id, params, name, word, comp, cpu) case id: { break; }
    #define BOA_3(id, params, name, word, comp, cpu) if (in[i] == id) { continue; }
    #define BOA_4(id, params, name, word, comp, cpu) if (in[i] == id) {}

    for (int i = 0; i < in.size (); i++)
    {
        switch (in[i])
        {
            #include ""
        }
    }
}
